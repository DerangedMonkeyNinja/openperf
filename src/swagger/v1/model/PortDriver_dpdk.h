/**
* Inception Core API
* REST API interface to the Inception Core
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * PortDriver_dpdk.h
 *
 * DPDK-specific driver information
 */

#ifndef PortDriver_dpdk_H_
#define PortDriver_dpdk_H_


#include "ModelBase.h"

#include <string>
#include <vector>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// DPDK-specific driver information
/// </summary>
class  PortDriver_dpdk
    : public ModelBase
{
public:
    PortDriver_dpdk();
    virtual ~PortDriver_dpdk();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// PortDriver_dpdk members

    /// <summary>
    /// Port driver name
    /// </summary>
    std::string getDriverName() const;
    void setDriverName(std::string value);
        /// <summary>
    /// PCI address of port hardware
    /// </summary>
    std::string getPciAddress() const;
    void setPciAddress(std::string value);
        /// <summary>
    /// Minimum receive buffer size
    /// </summary>
    int32_t getMinRxBufferSize() const;
    void setMinRxBufferSize(int32_t value);
        /// <summary>
    /// Minimum receive packet length
    /// </summary>
    int32_t getMaxRxPacketLength() const;
    void setMaxRxPacketLength(int32_t value);
        /// <summary>
    /// Maximum receive queues
    /// </summary>
    int32_t getMaxRxQueues() const;
    void setMaxRxQueues(int32_t value);
        /// <summary>
    /// Maximum transmit queues
    /// </summary>
    int32_t getMaxTxQueues() const;
    void setMaxTxQueues(int32_t value);
        /// <summary>
    /// Maximum MAC addresses
    /// </summary>
    int32_t getMaxMacAddresses() const;
    void setMaxMacAddresses(int32_t value);
        /// <summary>
    /// Available receive-side offloads
    /// </summary>
    std::vector<std::string>& getRxOffloads();
        /// <summary>
    /// Available transmit-side offloads
    /// </summary>
    std::vector<std::string>& getTxOffloads();
    
protected:
    std::string m_Driver_name;

    std::string m_Pci_address;

    int32_t m_Min_rx_buffer_size;

    int32_t m_Max_rx_packet_length;

    int32_t m_Max_rx_queues;

    int32_t m_Max_tx_queues;

    int32_t m_Max_mac_addresses;

    std::vector<std::string> m_Rx_offloads;

    std::vector<std::string> m_Tx_offloads;

};

}
}
}

#endif /* PortDriver_dpdk_H_ */
