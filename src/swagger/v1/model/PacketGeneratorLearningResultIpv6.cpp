/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "PacketGeneratorLearningResultIpv6.h"

namespace swagger {
namespace v1 {
namespace model {

PacketGeneratorLearningResultIpv6::PacketGeneratorLearningResultIpv6()
{
    m_Ip_address = "";
    m_Next_hop_address = "";
    m_Next_hop_addressIsSet = false;
    m_Mac_address = "";
    m_Mac_addressIsSet = false;
    
}

PacketGeneratorLearningResultIpv6::~PacketGeneratorLearningResultIpv6()
{
}

void PacketGeneratorLearningResultIpv6::validate()
{
    // TODO: implement validation
}

nlohmann::json PacketGeneratorLearningResultIpv6::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["ip_address"] = ModelBase::toJson(m_Ip_address);
    if(m_Next_hop_addressIsSet)
    {
        val["next_hop_address"] = ModelBase::toJson(m_Next_hop_address);
    }
    if(m_Mac_addressIsSet)
    {
        val["mac_address"] = ModelBase::toJson(m_Mac_address);
    }
    

    return val;
}

void PacketGeneratorLearningResultIpv6::fromJson(nlohmann::json& val)
{
    setIpAddress(val.at("ip_address"));
    if(val.find("next_hop_address") != val.end())
    {
        setNextHopAddress(val.at("next_hop_address"));
        
    }
    if(val.find("mac_address") != val.end())
    {
        setMacAddress(val.at("mac_address"));
        
    }
    
}


std::string PacketGeneratorLearningResultIpv6::getIpAddress() const
{
    return m_Ip_address;
}
void PacketGeneratorLearningResultIpv6::setIpAddress(std::string value)
{
    m_Ip_address = value;
    
}
std::string PacketGeneratorLearningResultIpv6::getNextHopAddress() const
{
    return m_Next_hop_address;
}
void PacketGeneratorLearningResultIpv6::setNextHopAddress(std::string value)
{
    m_Next_hop_address = value;
    m_Next_hop_addressIsSet = true;
}
bool PacketGeneratorLearningResultIpv6::nextHopAddressIsSet() const
{
    return m_Next_hop_addressIsSet;
}
void PacketGeneratorLearningResultIpv6::unsetNext_hop_address()
{
    m_Next_hop_addressIsSet = false;
}
std::string PacketGeneratorLearningResultIpv6::getMacAddress() const
{
    return m_Mac_address;
}
void PacketGeneratorLearningResultIpv6::setMacAddress(std::string value)
{
    m_Mac_address = value;
    m_Mac_addressIsSet = true;
}
bool PacketGeneratorLearningResultIpv6::macAddressIsSet() const
{
    return m_Mac_addressIsSet;
}
void PacketGeneratorLearningResultIpv6::unsetMac_address()
{
    m_Mac_addressIsSet = false;
}

}
}
}

