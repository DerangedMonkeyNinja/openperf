/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * PacketGeneratorLearningResultIpv6.h
 *
 * Defines an IPv6 destination address, IPv6 next hop address,  next hop MAC address tuple.
 */

#ifndef PacketGeneratorLearningResultIpv6_H_
#define PacketGeneratorLearningResultIpv6_H_


#include "ModelBase.h"

#include <string>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Defines an IPv6 destination address, IPv6 next hop address,  next hop MAC address tuple.
/// </summary>
class  PacketGeneratorLearningResultIpv6
    : public ModelBase
{
public:
    PacketGeneratorLearningResultIpv6();
    virtual ~PacketGeneratorLearningResultIpv6();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// PacketGeneratorLearningResultIpv6 members

    /// <summary>
    /// IPv6 destination address.
    /// </summary>
    std::string getIpAddress() const;
    void setIpAddress(std::string value);
        /// <summary>
    /// IPv6 next hop address.
    /// </summary>
    std::string getNextHopAddress() const;
    void setNextHopAddress(std::string value);
    bool nextHopAddressIsSet() const;
    void unsetNext_hop_address();
    /// <summary>
    /// MAC address of next hop IPv6 address.
    /// </summary>
    std::string getMacAddress() const;
    void setMacAddress(std::string value);
    bool macAddressIsSet() const;
    void unsetMac_address();

protected:
    std::string m_Ip_address;

    std::string m_Next_hop_address;
    bool m_Next_hop_addressIsSet;
    std::string m_Mac_address;
    bool m_Mac_addressIsSet;
};

}
}
}

#endif /* PacketGeneratorLearningResultIpv6_H_ */
